# coding: utf-8

"""
    OpenBB Platform API

    Investment research for everyone, anywhere.

    The version of the OpenAPI document: 1
    Contact: hello@openbb.co
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openbb_client.models.ob_bject_company_filings_results_inner import OBBjectCompanyFilingsResultsInner

class TestOBBjectCompanyFilingsResultsInner(unittest.TestCase):
    """OBBjectCompanyFilingsResultsInner unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> OBBjectCompanyFilingsResultsInner:
        """Test OBBjectCompanyFilingsResultsInner
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `OBBjectCompanyFilingsResultsInner`
        """
        model = OBBjectCompanyFilingsResultsInner()
        if include_optional:
            return OBBjectCompanyFilingsResultsInner(
                filing_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(),
                accepted_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                symbol = '',
                cik = '',
                report_type = '',
                filing_url = '',
                report_url = '',
                id = '',
                period_end_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(),
                sec_unique_id = '',
                instance_url = '',
                industry_group = '',
                industry_category = '',
                report_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(),
                act = None,
                items = None,
                primary_doc_description = '',
                primary_doc = '',
                accession_number = None,
                file_number = None,
                film_number = None,
                is_inline_xbrl = None,
                is_xbrl = None,
                size = None,
                complete_submission_url = '',
                filing_detail_url = ''
            )
        else:
            return OBBjectCompanyFilingsResultsInner(
                filing_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(),
                report_url = '',
                id = '',
                sec_unique_id = '',
                industry_group = '',
                industry_category = '',
        )
        """

    def testOBBjectCompanyFilingsResultsInner(self):
        """Test OBBjectCompanyFilingsResultsInner"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
