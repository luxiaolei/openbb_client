# coding: utf-8

"""
    OpenBB Platform API

    Investment research for everyone, anywhere.

    The version of the OpenAPI document: 1
    Contact: hello@openbb.co
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openbb_client.models.ob_bject_world_news_results_inner import OBBjectWorldNewsResultsInner

class TestOBBjectWorldNewsResultsInner(unittest.TestCase):
    """OBBjectWorldNewsResultsInner unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> OBBjectWorldNewsResultsInner:
        """Test OBBjectWorldNewsResultsInner
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `OBBjectWorldNewsResultsInner`
        """
        model = OBBjectWorldNewsResultsInner()
        if include_optional:
            return OBBjectWorldNewsResultsInner(
                var_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                title = '',
                images = [
                    {
                        'key' : ''
                        }
                    ],
                text = '',
                url = '',
                symbols = '',
                article_id = 56,
                site = '',
                tags = '',
                crawl_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                id = '',
                author = '',
                teaser = '',
                channels = '',
                stocks = '',
                updated = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                source = '',
                summary = '',
                topics = '',
                word_count = 56,
                business_relevance = 1.337,
                sentiment = '',
                sentiment_confidence = 1.337,
                language = '',
                spam = True,
                copyright = '',
                company = { },
                security = { }
            )
        else:
            return OBBjectWorldNewsResultsInner(
                var_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                title = '',
                article_id = 56,
                site = '',
                crawl_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                id = '',
        )
        """

    def testOBBjectWorldNewsResultsInner(self):
        """Test OBBjectWorldNewsResultsInner"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
