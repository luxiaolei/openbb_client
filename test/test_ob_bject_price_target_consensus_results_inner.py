# coding: utf-8

"""
    OpenBB Platform API

    Investment research for everyone, anywhere.

    The version of the OpenAPI document: 1
    Contact: hello@openbb.co
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openbb_client.models.ob_bject_price_target_consensus_results_inner import OBBjectPriceTargetConsensusResultsInner

class TestOBBjectPriceTargetConsensusResultsInner(unittest.TestCase):
    """OBBjectPriceTargetConsensusResultsInner unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> OBBjectPriceTargetConsensusResultsInner:
        """Test OBBjectPriceTargetConsensusResultsInner
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `OBBjectPriceTargetConsensusResultsInner`
        """
        model = OBBjectPriceTargetConsensusResultsInner()
        if include_optional:
            return OBBjectPriceTargetConsensusResultsInner(
                symbol = '',
                name = '',
                target_high = 1.337,
                target_low = 1.337,
                target_consensus = 1.337,
                target_median = 1.337,
                standard_deviation = 1.337,
                total_anaylsts = 56,
                raised = 56,
                lowered = 56,
                most_recent_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(),
                industry_group_number = 56,
                recommendation = '',
                recommendation_mean = 1.337,
                number_of_analysts = 56,
                current_price = 1.337,
                currency = ''
            )
        else:
            return OBBjectPriceTargetConsensusResultsInner(
                symbol = '',
        )
        """

    def testOBBjectPriceTargetConsensusResultsInner(self):
        """Test OBBjectPriceTargetConsensusResultsInner"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
