# coding: utf-8

"""
    OpenBB Platform API

    Investment research for everyone, anywhere.

    The version of the OpenAPI document: 1
    Contact: hello@openbb.co
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openbb_client.models.polygon_currency_snapshots_data import PolygonCurrencySnapshotsData

class TestPolygonCurrencySnapshotsData(unittest.TestCase):
    """PolygonCurrencySnapshotsData unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PolygonCurrencySnapshotsData:
        """Test PolygonCurrencySnapshotsData
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PolygonCurrencySnapshotsData`
        """
        model = PolygonCurrencySnapshotsData()
        if include_optional:
            return PolygonCurrencySnapshotsData(
                base_currency = '',
                counter_currency = '',
                last_rate = 1.337,
                open = 1.337,
                high = 1.337,
                low = 1.337,
                close = 1.337,
                volume = 56,
                prev_close = 1.337,
                vwap = 1.337,
                change = 1.337,
                change_percent = 1.337,
                prev_open = 1.337,
                prev_high = 1.337,
                prev_low = 1.337,
                prev_volume = 1.337,
                prev_vwap = 1.337,
                bid = 1.337,
                ask = 1.337,
                minute_open = 1.337,
                minute_high = 1.337,
                minute_low = 1.337,
                minute_close = 1.337,
                minute_volume = 1.337,
                minute_vwap = 1.337,
                minute_transactions = 1.337,
                quote_timestamp = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                minute_timestamp = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                last_updated = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f')
            )
        else:
            return PolygonCurrencySnapshotsData(
                base_currency = '',
                counter_currency = '',
                last_rate = 1.337,
                last_updated = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
        )
        """

    def testPolygonCurrencySnapshotsData(self):
        """Test PolygonCurrencySnapshotsData"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
