# coding: utf-8

"""
    OpenBB Platform API

    Investment research for everyone, anywhere.

    The version of the OpenAPI document: 1
    Contact: hello@openbb.co
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openbb_client.models.fmp_cash_flow_statement_growth_data import FMPCashFlowStatementGrowthData

class TestFMPCashFlowStatementGrowthData(unittest.TestCase):
    """FMPCashFlowStatementGrowthData unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> FMPCashFlowStatementGrowthData:
        """Test FMPCashFlowStatementGrowthData
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `FMPCashFlowStatementGrowthData`
        """
        model = FMPCashFlowStatementGrowthData()
        if include_optional:
            return FMPCashFlowStatementGrowthData(
                period_ending = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(),
                fiscal_period = '',
                fiscal_year = 56,
                symbol = '',
                growth_net_income = 1.337,
                growth_depreciation_and_amortization = 1.337,
                growth_deferred_income_tax = 1.337,
                growth_stock_based_compensation = 1.337,
                growth_change_in_working_capital = 1.337,
                growth_account_receivables = 1.337,
                growth_inventory = 1.337,
                growth_account_payable = 1.337,
                growth_other_working_capital = 1.337,
                growth_other_non_cash_items = 1.337,
                growth_net_cash_from_operating_activities = 1.337,
                growth_purchase_of_property_plant_and_equipment = 1.337,
                growth_acquisitions = 1.337,
                growth_purchase_of_investment_securities = 1.337,
                growth_sale_and_maturity_of_investments = 1.337,
                growth_other_investing_activities = 1.337,
                growth_net_cash_from_investing_activities = 1.337,
                growth_repayment_of_debt = 1.337,
                growth_common_stock_issued = 1.337,
                growth_common_stock_repurchased = 1.337,
                growth_dividends_paid = 1.337,
                growth_other_financing_activities = 1.337,
                growth_net_cash_from_financing_activities = 1.337,
                growth_effect_of_exchange_rate_changes_on_cash = 1.337,
                growth_net_change_in_cash_and_equivalents = 1.337,
                growth_cash_at_beginning_of_period = 1.337,
                growth_cash_at_end_of_period = 1.337,
                growth_operating_cash_flow = 1.337,
                growth_capital_expenditure = 1.337,
                growth_free_cash_flow = 1.337
            )
        else:
            return FMPCashFlowStatementGrowthData(
                period_ending = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(),
                symbol = '',
        )
        """

    def testFMPCashFlowStatementGrowthData(self):
        """Test FMPCashFlowStatementGrowthData"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
