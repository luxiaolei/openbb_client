# coding: utf-8

"""
    OpenBB Platform API

    Investment research for everyone, anywhere.

    The version of the OpenAPI document: 1
    Contact: hello@openbb.co
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openbb_client.models.polygon_equity_nbbo_data import PolygonEquityNBBOData

class TestPolygonEquityNBBOData(unittest.TestCase):
    """PolygonEquityNBBOData unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PolygonEquityNBBOData:
        """Test PolygonEquityNBBOData
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PolygonEquityNBBOData`
        """
        model = PolygonEquityNBBOData()
        if include_optional:
            return PolygonEquityNBBOData(
                ask_exchange = '',
                ask = 1.337,
                ask_size = 56,
                bid_size = 56,
                bid = 1.337,
                bid_exchange = '',
                tape = '',
                conditions = None,
                indicators = [
                    56
                    ],
                sequence_num = 56,
                participant_timestamp = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                sip_timestamp = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                trf_timestamp = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f')
            )
        else:
            return PolygonEquityNBBOData(
                ask_exchange = '',
                ask = 1.337,
                ask_size = 56,
                bid_size = 56,
                bid = 1.337,
                bid_exchange = '',
        )
        """

    def testPolygonEquityNBBOData(self):
        """Test PolygonEquityNBBOData"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
