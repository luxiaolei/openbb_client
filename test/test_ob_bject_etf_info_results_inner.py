# coding: utf-8

"""
    OpenBB Platform API

    Investment research for everyone, anywhere.

    The version of the OpenAPI document: 1
    Contact: hello@openbb.co
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openbb_client.models.ob_bject_etf_info_results_inner import OBBjectEtfInfoResultsInner

class TestOBBjectEtfInfoResultsInner(unittest.TestCase):
    """OBBjectEtfInfoResultsInner unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> OBBjectEtfInfoResultsInner:
        """Test OBBjectEtfInfoResultsInner
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `OBBjectEtfInfoResultsInner`
        """
        model = OBBjectEtfInfoResultsInner()
        if include_optional:
            return OBBjectEtfInfoResultsInner(
                symbol = '',
                name = '',
                description = '',
                inception_date = '',
                fund_type = '',
                fund_family = '',
                category = '',
                exchange = '',
                exchange_timezone = '',
                currency = '',
                nav_price = 1.337,
                total_assets = 56,
                trailing_pe = 1.337,
                dividend_yield = 1.337,
                dividend_rate_ttm = 1.337,
                dividend_yield_ttm = 1.337,
                year_high = 1.337,
                year_low = 1.337,
                ma_50d = 1.337,
                ma_200d = 1.337,
                return_ytd = 1.337,
                return_3y_avg = 1.337,
                return_5y_avg = 1.337,
                beta_3y_avg = 1.337,
                volume_avg = 1.337,
                volume_avg_10d = 1.337,
                bid = 1.337,
                bid_size = 1.337,
                ask = 1.337,
                ask_size = 1.337,
                open = 1.337,
                high = 1.337,
                low = 1.337,
                volume = 56,
                prev_close = 1.337,
                fund_listing_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(),
                data_change_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(),
                etn_maturity_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(),
                is_listed = True,
                close_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(),
                isin = '',
                ric = '',
                sedol = '',
                figi_symbol = '',
                share_class_figi = '',
                firstbridge_id = '',
                firstbridge_parent_id = '',
                intrinio_id = '',
                intraday_nav_symbol = '',
                primary_symbol = '',
                etp_structure_type = '',
                legal_structure = '',
                issuer = '',
                etn_issuing_bank = '',
                investment_style = '',
                derivatives_based = '',
                income_category = '',
                asset_class = '',
                other_asset_types = '',
                single_category_designation = '',
                beta_type = '',
                beta_details = '',
                market_cap_range = '',
                market_cap_weighting_type = '',
                index_weighting_scheme = '',
                index_linked = '',
                index_name = '',
                index_symbol = '',
                parent_index = '',
                index_family = '',
                broader_index_family = '',
                index_provider = '',
                index_provider_code = '',
                replication_structure = '',
                growth_value_tilt = '',
                growth_type = '',
                value_type = '',
                sector = '',
                industry = '',
                industry_group = '',
                cross_sector_theme = '',
                natural_resources_type = '',
                us_or_excludes_us = '',
                developed_emerging = '',
                specialized_region = '',
                continent = '',
                latin_america_sub_group = '',
                europe_sub_group = '',
                asia_sub_group = '',
                specific_country = '',
                china_listing_location = '',
                us_state = '',
                real_estate = '',
                fundamental_weighting_type = '',
                dividend_weighting_type = '',
                bond_type = '',
                government_bond_types = '',
                municipal_bond_region = '',
                municipal_vrdo = True,
                mortgage_bond_types = '',
                bond_tax_status = '',
                credit_quality = '',
                average_maturity = '',
                specific_maturity_year = 56,
                commodity_types = '',
                energy_type = '',
                agricultural_type = '',
                livestock_type = '',
                metal_type = '',
                inverse_leveraged = '',
                target_date_multi_asset_type = '',
                currency_pair = '',
                social_environmental_type = '',
                clean_energy_type = '',
                dividend_type = '',
                regular_dividend_payor_type = '',
                quant_strategies_type = '',
                other_quant_models = '',
                hedge_fund_type = '',
                excludes_financials = True,
                excludes_technology = True,
                holds_only_nyse_stocks = True,
                holds_only_nasdaq_stocks = True,
                holds_mlp = True,
                holds_preferred_stock = True,
                holds_closed_end_funds = True,
                holds_adr = True,
                laddered = True,
                zero_coupon = True,
                floating_rate = True,
                build_america_bonds = True,
                dynamic_futures_roll = True,
                currency_hedged = True,
                includes_short_exposure = True,
                ucits = True,
                registered_countries = '',
                issuer_country = '',
                domicile = '',
                listing_country_code = '',
                listing_region = '',
                bond_currency_denomination = '',
                base_currency = '',
                listing_currency = '',
                number_of_holdings = 56,
                month_end_assets = 1.337,
                net_expense_ratio = 1.337,
                etf_portfolio_turnover = 1.337,
                cusip = '',
                aum = 1.337,
                nav = 1.337,
                nav_currency = '',
                expense_ratio = 1.337,
                holdings_count = 56,
                avg_volume = 1.337,
                website = ''
            )
        else:
            return OBBjectEtfInfoResultsInner(
                symbol = '',
                name = '',
                inception_date = '',
        )
        """

    def testOBBjectEtfInfoResultsInner(self):
        """Test OBBjectEtfInfoResultsInner"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
