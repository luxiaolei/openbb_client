# coding: utf-8

"""
    OpenBB Platform API

    Investment research for everyone, anywhere.

    The version of the OpenAPI document: 1
    Contact: hello@openbb.co
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openbb_client.models.ob_bject_financial_ratios_results_inner import OBBjectFinancialRatiosResultsInner

class TestOBBjectFinancialRatiosResultsInner(unittest.TestCase):
    """OBBjectFinancialRatiosResultsInner unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> OBBjectFinancialRatiosResultsInner:
        """Test OBBjectFinancialRatiosResultsInner
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `OBBjectFinancialRatiosResultsInner`
        """
        model = OBBjectFinancialRatiosResultsInner()
        if include_optional:
            return OBBjectFinancialRatiosResultsInner(
                period_ending = '',
                fiscal_period = '',
                fiscal_year = 56,
                current_ratio = 1.337,
                quick_ratio = 1.337,
                cash_ratio = 1.337,
                days_of_sales_outstanding = 1.337,
                days_of_inventory_outstanding = 1.337,
                operating_cycle = 1.337,
                days_of_payables_outstanding = 1.337,
                cash_conversion_cycle = 1.337,
                gross_profit_margin = 1.337,
                operating_profit_margin = 1.337,
                pretax_profit_margin = 1.337,
                net_profit_margin = 1.337,
                effective_tax_rate = 1.337,
                return_on_assets = 1.337,
                return_on_equity = 1.337,
                return_on_capital_employed = 1.337,
                net_income_per_ebt = 1.337,
                ebt_per_ebit = 1.337,
                ebit_per_revenue = 1.337,
                debt_ratio = 1.337,
                debt_equity_ratio = 1.337,
                long_term_debt_to_capitalization = 1.337,
                total_debt_to_capitalization = 1.337,
                interest_coverage = 1.337,
                cash_flow_to_debt_ratio = 1.337,
                company_equity_multiplier = 1.337,
                receivables_turnover = 1.337,
                payables_turnover = 1.337,
                inventory_turnover = 1.337,
                fixed_asset_turnover = 1.337,
                asset_turnover = 1.337,
                operating_cash_flow_per_share = 1.337,
                free_cash_flow_per_share = 1.337,
                cash_per_share = 1.337,
                payout_ratio = 1.337,
                operating_cash_flow_sales_ratio = 1.337,
                free_cash_flow_operating_cash_flow_ratio = 1.337,
                cash_flow_coverage_ratios = 1.337,
                short_term_coverage_ratios = 1.337,
                capital_expenditure_coverage_ratio = 1.337,
                dividend_paid_and_capex_coverage_ratio = 1.337,
                dividend_payout_ratio = 1.337,
                price_book_value_ratio = 1.337,
                price_to_book_ratio = 1.337,
                price_to_sales_ratio = 1.337,
                price_earnings_ratio = 1.337,
                price_to_free_cash_flows_ratio = 1.337,
                price_to_operating_cash_flows_ratio = 1.337,
                price_cash_flow_ratio = 1.337,
                price_earnings_to_growth_ratio = 1.337,
                price_sales_ratio = 1.337,
                dividend_yield = 1.337,
                dividend_yield_percentage = 1.337,
                dividend_per_share = 1.337,
                enterprise_value_multiple = 1.337,
                price_fair_value = 1.337
            )
        else:
            return OBBjectFinancialRatiosResultsInner(
                period_ending = '',
                fiscal_period = '',
        )
        """

    def testOBBjectFinancialRatiosResultsInner(self):
        """Test OBBjectFinancialRatiosResultsInner"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
