# coding: utf-8

"""
    OpenBB Platform API

    Investment research for everyone, anywhere.

    The version of the OpenAPI document: 1
    Contact: hello@openbb.co
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openbb_client.models.ob_bject_insider_trading_results_inner import OBBjectInsiderTradingResultsInner

class TestOBBjectInsiderTradingResultsInner(unittest.TestCase):
    """OBBjectInsiderTradingResultsInner unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> OBBjectInsiderTradingResultsInner:
        """Test OBBjectInsiderTradingResultsInner
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `OBBjectInsiderTradingResultsInner`
        """
        model = OBBjectInsiderTradingResultsInner()
        if include_optional:
            return OBBjectInsiderTradingResultsInner(
                symbol = '',
                company_cik = None,
                filing_date = None,
                transaction_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(),
                owner_cik = None,
                owner_name = '',
                owner_title = '',
                transaction_type = '',
                acquisition_or_disposition = '',
                security_type = '',
                securities_owned = 1.337,
                securities_transacted = 1.337,
                transaction_price = 1.337,
                filing_url = '',
                company_name = '',
                conversion_exercise_price = 1.337,
                deemed_execution_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(),
                exercise_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(),
                expiration_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(),
                underlying_security_title = '',
                underlying_shares = None,
                nature_of_ownership = '',
                director = True,
                officer = True,
                ten_percent_owner = True,
                other_relation = True,
                derivative_transaction = True,
                report_line_number = 56,
                form = None,
                other = True,
                other_text = '',
                transaction_timeliness = '',
                ownership_type = '',
                underlying_security_shares = 1.337,
                underlying_security_value = 1.337,
                transaction_value = 1.337,
                value_owned = 1.337,
                footnote = '',
                form_type = ''
            )
        else:
            return OBBjectInsiderTradingResultsInner(
                company_name = '',
                form_type = '',
        )
        """

    def testOBBjectInsiderTradingResultsInner(self):
        """Test OBBjectInsiderTradingResultsInner"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
