# coding: utf-8

"""
    OpenBB Platform API

    Investment research for everyone, anywhere.

    The version of the OpenAPI document: 1
    Contact: hello@openbb.co
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openbb_client.models.intrinio_etf_holdings_data import IntrinioEtfHoldingsData

class TestIntrinioEtfHoldingsData(unittest.TestCase):
    """IntrinioEtfHoldingsData unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> IntrinioEtfHoldingsData:
        """Test IntrinioEtfHoldingsData
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `IntrinioEtfHoldingsData`
        """
        model = IntrinioEtfHoldingsData()
        if include_optional:
            return IntrinioEtfHoldingsData(
                symbol = '',
                name = '',
                security_type = '',
                isin = '',
                ric = '',
                sedol = '',
                share_class_figi = '',
                country = '',
                maturity_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(),
                contract_expiry_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(),
                coupon = 1.337,
                balance = None,
                unit = '',
                units_per_share = 1.337,
                face_value = 1.337,
                derivatives_value = 1.337,
                value = 1.337,
                weight = 1.337,
                updated = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date()
            )
        else:
            return IntrinioEtfHoldingsData(
        )
        """

    def testIntrinioEtfHoldingsData(self):
        """Test IntrinioEtfHoldingsData"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
