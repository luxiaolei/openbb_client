# coding: utf-8

"""
    OpenBB Platform API

    Investment research for everyone, anywhere.

    The version of the OpenAPI document: 1
    Contact: hello@openbb.co
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openbb_client.models.fmp_income_statement_growth_data import FMPIncomeStatementGrowthData

class TestFMPIncomeStatementGrowthData(unittest.TestCase):
    """FMPIncomeStatementGrowthData unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> FMPIncomeStatementGrowthData:
        """Test FMPIncomeStatementGrowthData
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `FMPIncomeStatementGrowthData`
        """
        model = FMPIncomeStatementGrowthData()
        if include_optional:
            return FMPIncomeStatementGrowthData(
                period_ending = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(),
                fiscal_period = '',
                fiscal_year = 56,
                symbol = '',
                growth_revenue = 1.337,
                growth_cost_of_revenue = 1.337,
                growth_gross_profit = 1.337,
                growth_gross_profit_margin = 1.337,
                growth_general_and_admin_expense = 1.337,
                growth_research_and_development_expense = 1.337,
                growth_selling_and_marketing_expense = 1.337,
                growth_other_expenses = 1.337,
                growth_operating_expenses = 1.337,
                growth_cost_and_expenses = 1.337,
                growth_interest_expense = 1.337,
                growth_depreciation_and_amortization = 1.337,
                growth_ebitda = 1.337,
                growth_ebitda_margin = 1.337,
                growth_operating_income = 1.337,
                growth_operating_income_margin = 1.337,
                growth_total_other_income_expenses_net = 1.337,
                growth_income_before_tax = 1.337,
                growth_income_before_tax_margin = 1.337,
                growth_income_tax_expense = 1.337,
                growth_consolidated_net_income = 1.337,
                growth_net_income_margin = 1.337,
                growth_basic_earings_per_share = 1.337,
                growth_diluted_earnings_per_share = 1.337,
                growth_weighted_average_basic_shares_outstanding = 1.337,
                growth_weighted_average_diluted_shares_outstanding = 1.337
            )
        else:
            return FMPIncomeStatementGrowthData(
                period_ending = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(),
                symbol = '',
        )
        """

    def testFMPIncomeStatementGrowthData(self):
        """Test FMPIncomeStatementGrowthData"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
