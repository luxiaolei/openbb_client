# coding: utf-8

"""
    OpenBB Platform API

    Investment research for everyone, anywhere.

    The version of the OpenAPI document: 1
    Contact: hello@openbb.co
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import pprint
import re  # noqa: F401
import json

from datetime import date
from pydantic import BaseModel, ConfigDict, Field, StrictFloat, StrictInt, StrictStr
from typing import Any, ClassVar, Dict, List, Optional, Union
from typing import Optional, Set
from typing_extensions import Self

class FMPCashFlowStatementGrowthData(BaseModel):
    """
    FMP Cash Flow Statement Growth Data.
    """ # noqa: E501
    period_ending: date = Field(description="The end date of the reporting period.")
    fiscal_period: Optional[StrictStr] = None
    fiscal_year: Optional[StrictInt] = None
    symbol: StrictStr = Field(description="Symbol representing the entity requested in the data.")
    growth_net_income: Optional[Union[StrictFloat, StrictInt]] = None
    growth_depreciation_and_amortization: Optional[Union[StrictFloat, StrictInt]] = None
    growth_deferred_income_tax: Optional[Union[StrictFloat, StrictInt]] = None
    growth_stock_based_compensation: Optional[Union[StrictFloat, StrictInt]] = None
    growth_change_in_working_capital: Optional[Union[StrictFloat, StrictInt]] = None
    growth_account_receivables: Optional[Union[StrictFloat, StrictInt]] = None
    growth_inventory: Optional[Union[StrictFloat, StrictInt]] = None
    growth_account_payable: Optional[Union[StrictFloat, StrictInt]] = None
    growth_other_working_capital: Optional[Union[StrictFloat, StrictInt]] = None
    growth_other_non_cash_items: Optional[Union[StrictFloat, StrictInt]] = None
    growth_net_cash_from_operating_activities: Optional[Union[StrictFloat, StrictInt]] = None
    growth_purchase_of_property_plant_and_equipment: Optional[Union[StrictFloat, StrictInt]] = None
    growth_acquisitions: Optional[Union[StrictFloat, StrictInt]] = None
    growth_purchase_of_investment_securities: Optional[Union[StrictFloat, StrictInt]] = None
    growth_sale_and_maturity_of_investments: Optional[Union[StrictFloat, StrictInt]] = None
    growth_other_investing_activities: Optional[Union[StrictFloat, StrictInt]] = None
    growth_net_cash_from_investing_activities: Optional[Union[StrictFloat, StrictInt]] = None
    growth_repayment_of_debt: Optional[Union[StrictFloat, StrictInt]] = None
    growth_common_stock_issued: Optional[Union[StrictFloat, StrictInt]] = None
    growth_common_stock_repurchased: Optional[Union[StrictFloat, StrictInt]] = None
    growth_dividends_paid: Optional[Union[StrictFloat, StrictInt]] = None
    growth_other_financing_activities: Optional[Union[StrictFloat, StrictInt]] = None
    growth_net_cash_from_financing_activities: Optional[Union[StrictFloat, StrictInt]] = None
    growth_effect_of_exchange_rate_changes_on_cash: Optional[Union[StrictFloat, StrictInt]] = None
    growth_net_change_in_cash_and_equivalents: Optional[Union[StrictFloat, StrictInt]] = None
    growth_cash_at_beginning_of_period: Optional[Union[StrictFloat, StrictInt]] = None
    growth_cash_at_end_of_period: Optional[Union[StrictFloat, StrictInt]] = None
    growth_operating_cash_flow: Optional[Union[StrictFloat, StrictInt]] = None
    growth_capital_expenditure: Optional[Union[StrictFloat, StrictInt]] = None
    growth_free_cash_flow: Optional[Union[StrictFloat, StrictInt]] = None
    additional_properties: Dict[str, Any] = {}
    __properties: ClassVar[List[str]] = ["period_ending", "fiscal_period", "fiscal_year", "symbol", "growth_net_income", "growth_depreciation_and_amortization", "growth_deferred_income_tax", "growth_stock_based_compensation", "growth_change_in_working_capital", "growth_account_receivables", "growth_inventory", "growth_account_payable", "growth_other_working_capital", "growth_other_non_cash_items", "growth_net_cash_from_operating_activities", "growth_purchase_of_property_plant_and_equipment", "growth_acquisitions", "growth_purchase_of_investment_securities", "growth_sale_and_maturity_of_investments", "growth_other_investing_activities", "growth_net_cash_from_investing_activities", "growth_repayment_of_debt", "growth_common_stock_issued", "growth_common_stock_repurchased", "growth_dividends_paid", "growth_other_financing_activities", "growth_net_cash_from_financing_activities", "growth_effect_of_exchange_rate_changes_on_cash", "growth_net_change_in_cash_and_equivalents", "growth_cash_at_beginning_of_period", "growth_cash_at_end_of_period", "growth_operating_cash_flow", "growth_capital_expenditure", "growth_free_cash_flow"]

    model_config = ConfigDict(
        populate_by_name=True,
        validate_assignment=True,
        protected_namespaces=(),
    )


    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.model_dump(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        # TODO: pydantic v2: use .model_dump_json(by_alias=True, exclude_unset=True) instead
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> Optional[Self]:
        """Create an instance of FMPCashFlowStatementGrowthData from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self) -> Dict[str, Any]:
        """Return the dictionary representation of the model using alias.

        This has the following differences from calling pydantic's
        `self.model_dump(by_alias=True)`:

        * `None` is only added to the output dict for nullable fields that
          were set at model initialization. Other fields with value `None`
          are ignored.
        * Fields in `self.additional_properties` are added to the output dict.
        """
        excluded_fields: Set[str] = set([
            "additional_properties",
        ])

        _dict = self.model_dump(
            by_alias=True,
            exclude=excluded_fields,
            exclude_none=True,
        )
        # puts key-value pairs in additional_properties in the top level
        if self.additional_properties is not None:
            for _key, _value in self.additional_properties.items():
                _dict[_key] = _value

        # set to None if fiscal_period (nullable) is None
        # and model_fields_set contains the field
        if self.fiscal_period is None and "fiscal_period" in self.model_fields_set:
            _dict['fiscal_period'] = None

        # set to None if fiscal_year (nullable) is None
        # and model_fields_set contains the field
        if self.fiscal_year is None and "fiscal_year" in self.model_fields_set:
            _dict['fiscal_year'] = None

        # set to None if growth_net_income (nullable) is None
        # and model_fields_set contains the field
        if self.growth_net_income is None and "growth_net_income" in self.model_fields_set:
            _dict['growth_net_income'] = None

        # set to None if growth_depreciation_and_amortization (nullable) is None
        # and model_fields_set contains the field
        if self.growth_depreciation_and_amortization is None and "growth_depreciation_and_amortization" in self.model_fields_set:
            _dict['growth_depreciation_and_amortization'] = None

        # set to None if growth_deferred_income_tax (nullable) is None
        # and model_fields_set contains the field
        if self.growth_deferred_income_tax is None and "growth_deferred_income_tax" in self.model_fields_set:
            _dict['growth_deferred_income_tax'] = None

        # set to None if growth_stock_based_compensation (nullable) is None
        # and model_fields_set contains the field
        if self.growth_stock_based_compensation is None and "growth_stock_based_compensation" in self.model_fields_set:
            _dict['growth_stock_based_compensation'] = None

        # set to None if growth_change_in_working_capital (nullable) is None
        # and model_fields_set contains the field
        if self.growth_change_in_working_capital is None and "growth_change_in_working_capital" in self.model_fields_set:
            _dict['growth_change_in_working_capital'] = None

        # set to None if growth_account_receivables (nullable) is None
        # and model_fields_set contains the field
        if self.growth_account_receivables is None and "growth_account_receivables" in self.model_fields_set:
            _dict['growth_account_receivables'] = None

        # set to None if growth_inventory (nullable) is None
        # and model_fields_set contains the field
        if self.growth_inventory is None and "growth_inventory" in self.model_fields_set:
            _dict['growth_inventory'] = None

        # set to None if growth_account_payable (nullable) is None
        # and model_fields_set contains the field
        if self.growth_account_payable is None and "growth_account_payable" in self.model_fields_set:
            _dict['growth_account_payable'] = None

        # set to None if growth_other_working_capital (nullable) is None
        # and model_fields_set contains the field
        if self.growth_other_working_capital is None and "growth_other_working_capital" in self.model_fields_set:
            _dict['growth_other_working_capital'] = None

        # set to None if growth_other_non_cash_items (nullable) is None
        # and model_fields_set contains the field
        if self.growth_other_non_cash_items is None and "growth_other_non_cash_items" in self.model_fields_set:
            _dict['growth_other_non_cash_items'] = None

        # set to None if growth_net_cash_from_operating_activities (nullable) is None
        # and model_fields_set contains the field
        if self.growth_net_cash_from_operating_activities is None and "growth_net_cash_from_operating_activities" in self.model_fields_set:
            _dict['growth_net_cash_from_operating_activities'] = None

        # set to None if growth_purchase_of_property_plant_and_equipment (nullable) is None
        # and model_fields_set contains the field
        if self.growth_purchase_of_property_plant_and_equipment is None and "growth_purchase_of_property_plant_and_equipment" in self.model_fields_set:
            _dict['growth_purchase_of_property_plant_and_equipment'] = None

        # set to None if growth_acquisitions (nullable) is None
        # and model_fields_set contains the field
        if self.growth_acquisitions is None and "growth_acquisitions" in self.model_fields_set:
            _dict['growth_acquisitions'] = None

        # set to None if growth_purchase_of_investment_securities (nullable) is None
        # and model_fields_set contains the field
        if self.growth_purchase_of_investment_securities is None and "growth_purchase_of_investment_securities" in self.model_fields_set:
            _dict['growth_purchase_of_investment_securities'] = None

        # set to None if growth_sale_and_maturity_of_investments (nullable) is None
        # and model_fields_set contains the field
        if self.growth_sale_and_maturity_of_investments is None and "growth_sale_and_maturity_of_investments" in self.model_fields_set:
            _dict['growth_sale_and_maturity_of_investments'] = None

        # set to None if growth_other_investing_activities (nullable) is None
        # and model_fields_set contains the field
        if self.growth_other_investing_activities is None and "growth_other_investing_activities" in self.model_fields_set:
            _dict['growth_other_investing_activities'] = None

        # set to None if growth_net_cash_from_investing_activities (nullable) is None
        # and model_fields_set contains the field
        if self.growth_net_cash_from_investing_activities is None and "growth_net_cash_from_investing_activities" in self.model_fields_set:
            _dict['growth_net_cash_from_investing_activities'] = None

        # set to None if growth_repayment_of_debt (nullable) is None
        # and model_fields_set contains the field
        if self.growth_repayment_of_debt is None and "growth_repayment_of_debt" in self.model_fields_set:
            _dict['growth_repayment_of_debt'] = None

        # set to None if growth_common_stock_issued (nullable) is None
        # and model_fields_set contains the field
        if self.growth_common_stock_issued is None and "growth_common_stock_issued" in self.model_fields_set:
            _dict['growth_common_stock_issued'] = None

        # set to None if growth_common_stock_repurchased (nullable) is None
        # and model_fields_set contains the field
        if self.growth_common_stock_repurchased is None and "growth_common_stock_repurchased" in self.model_fields_set:
            _dict['growth_common_stock_repurchased'] = None

        # set to None if growth_dividends_paid (nullable) is None
        # and model_fields_set contains the field
        if self.growth_dividends_paid is None and "growth_dividends_paid" in self.model_fields_set:
            _dict['growth_dividends_paid'] = None

        # set to None if growth_other_financing_activities (nullable) is None
        # and model_fields_set contains the field
        if self.growth_other_financing_activities is None and "growth_other_financing_activities" in self.model_fields_set:
            _dict['growth_other_financing_activities'] = None

        # set to None if growth_net_cash_from_financing_activities (nullable) is None
        # and model_fields_set contains the field
        if self.growth_net_cash_from_financing_activities is None and "growth_net_cash_from_financing_activities" in self.model_fields_set:
            _dict['growth_net_cash_from_financing_activities'] = None

        # set to None if growth_effect_of_exchange_rate_changes_on_cash (nullable) is None
        # and model_fields_set contains the field
        if self.growth_effect_of_exchange_rate_changes_on_cash is None and "growth_effect_of_exchange_rate_changes_on_cash" in self.model_fields_set:
            _dict['growth_effect_of_exchange_rate_changes_on_cash'] = None

        # set to None if growth_net_change_in_cash_and_equivalents (nullable) is None
        # and model_fields_set contains the field
        if self.growth_net_change_in_cash_and_equivalents is None and "growth_net_change_in_cash_and_equivalents" in self.model_fields_set:
            _dict['growth_net_change_in_cash_and_equivalents'] = None

        # set to None if growth_cash_at_beginning_of_period (nullable) is None
        # and model_fields_set contains the field
        if self.growth_cash_at_beginning_of_period is None and "growth_cash_at_beginning_of_period" in self.model_fields_set:
            _dict['growth_cash_at_beginning_of_period'] = None

        # set to None if growth_cash_at_end_of_period (nullable) is None
        # and model_fields_set contains the field
        if self.growth_cash_at_end_of_period is None and "growth_cash_at_end_of_period" in self.model_fields_set:
            _dict['growth_cash_at_end_of_period'] = None

        # set to None if growth_operating_cash_flow (nullable) is None
        # and model_fields_set contains the field
        if self.growth_operating_cash_flow is None and "growth_operating_cash_flow" in self.model_fields_set:
            _dict['growth_operating_cash_flow'] = None

        # set to None if growth_capital_expenditure (nullable) is None
        # and model_fields_set contains the field
        if self.growth_capital_expenditure is None and "growth_capital_expenditure" in self.model_fields_set:
            _dict['growth_capital_expenditure'] = None

        # set to None if growth_free_cash_flow (nullable) is None
        # and model_fields_set contains the field
        if self.growth_free_cash_flow is None and "growth_free_cash_flow" in self.model_fields_set:
            _dict['growth_free_cash_flow'] = None

        return _dict

    @classmethod
    def from_dict(cls, obj: Optional[Dict[str, Any]]) -> Optional[Self]:
        """Create an instance of FMPCashFlowStatementGrowthData from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return cls.model_validate(obj)

        _obj = cls.model_validate({
            "period_ending": obj.get("period_ending"),
            "fiscal_period": obj.get("fiscal_period"),
            "fiscal_year": obj.get("fiscal_year"),
            "symbol": obj.get("symbol"),
            "growth_net_income": obj.get("growth_net_income"),
            "growth_depreciation_and_amortization": obj.get("growth_depreciation_and_amortization"),
            "growth_deferred_income_tax": obj.get("growth_deferred_income_tax"),
            "growth_stock_based_compensation": obj.get("growth_stock_based_compensation"),
            "growth_change_in_working_capital": obj.get("growth_change_in_working_capital"),
            "growth_account_receivables": obj.get("growth_account_receivables"),
            "growth_inventory": obj.get("growth_inventory"),
            "growth_account_payable": obj.get("growth_account_payable"),
            "growth_other_working_capital": obj.get("growth_other_working_capital"),
            "growth_other_non_cash_items": obj.get("growth_other_non_cash_items"),
            "growth_net_cash_from_operating_activities": obj.get("growth_net_cash_from_operating_activities"),
            "growth_purchase_of_property_plant_and_equipment": obj.get("growth_purchase_of_property_plant_and_equipment"),
            "growth_acquisitions": obj.get("growth_acquisitions"),
            "growth_purchase_of_investment_securities": obj.get("growth_purchase_of_investment_securities"),
            "growth_sale_and_maturity_of_investments": obj.get("growth_sale_and_maturity_of_investments"),
            "growth_other_investing_activities": obj.get("growth_other_investing_activities"),
            "growth_net_cash_from_investing_activities": obj.get("growth_net_cash_from_investing_activities"),
            "growth_repayment_of_debt": obj.get("growth_repayment_of_debt"),
            "growth_common_stock_issued": obj.get("growth_common_stock_issued"),
            "growth_common_stock_repurchased": obj.get("growth_common_stock_repurchased"),
            "growth_dividends_paid": obj.get("growth_dividends_paid"),
            "growth_other_financing_activities": obj.get("growth_other_financing_activities"),
            "growth_net_cash_from_financing_activities": obj.get("growth_net_cash_from_financing_activities"),
            "growth_effect_of_exchange_rate_changes_on_cash": obj.get("growth_effect_of_exchange_rate_changes_on_cash"),
            "growth_net_change_in_cash_and_equivalents": obj.get("growth_net_change_in_cash_and_equivalents"),
            "growth_cash_at_beginning_of_period": obj.get("growth_cash_at_beginning_of_period"),
            "growth_cash_at_end_of_period": obj.get("growth_cash_at_end_of_period"),
            "growth_operating_cash_flow": obj.get("growth_operating_cash_flow"),
            "growth_capital_expenditure": obj.get("growth_capital_expenditure"),
            "growth_free_cash_flow": obj.get("growth_free_cash_flow")
        })
        # store additional fields in additional_properties
        for _key in obj.keys():
            if _key not in cls.__properties:
                _obj.additional_properties[_key] = obj.get(_key)

        return _obj


